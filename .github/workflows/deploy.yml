name: CI/CD Pipeline for .NET API

on:
  push:
    branches:
      - production

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # Set up .NET Core
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0 # Specify your .NET version

    # Build and Publish the .NET Application
    - name: Build .NET Application
      run: |
        dotnet restore
        dotnet publish -c Release -o publish

    # Build the Docker image
    - name: Build Docker Image
      run: |
        docker build -t worklog-api:latest .

    # Deploy to VPS
    - name: Deploy to VPS
      env:
        VPS_IP: ${{ secrets.VPS_IP }}
        VPS_USER: ${{ secrets.VPS_USER }}
        VPS_SSH_KEY: ${{ secrets.VPS_SSH_KEY }}
      run: |
        # Save the private SSH key
        echo "$VPS_SSH_KEY" > private_key
        chmod 600 private_key

        # Ensure the directory exists on the VPS
        ssh -i private_key -o StrictHostKeyChecking=no $VPS_USER@$VPS_IP "mkdir -p /home/$VPS_USER/worklog-api"

        # Transfer files to the VPS
        scp -i private_key -o StrictHostKeyChecking=no \
          docker-compose.yml $VPS_USER@$VPS_IP:/home/$VPS_USER/worklog-api/

        # SSH into the VPS and deploy
        ssh -i private_key -o StrictHostKeyChecking=no $VPS_USER@$VPS_IP << EOF
          # Ensure Docker is running
          sudo systemctl start docker

          # Ensure Docker Compose is installed
          if ! command -v docker-compose &> /dev/null; then
            sudo apt update
            sudo apt install -y docker-compose-plugin
          fi

          # Stop and remove the existing container if it exists
          docker stop worklog-api || true
          docker rm worklog-api || true
          docker rmi worklog-api:latest || true

          # Navigate to the application directory
          cd /home/$VPS_USER/worklog-api

          # Start the container
          docker-compose up -d --build
        EOF

        # Clean up the SSH key
        rm -f private_key
      shell: bash
